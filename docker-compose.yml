version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  bot:
    build: .
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      YANDEX_API_KEY: ${YANDEX_API_KEY}
      YANDEX_FOLDER_ID: ${YANDEX_FOLDER_ID}
      ADMINS: ${ADMINS}
    networks:
      - internal_network  # Изолированная сеть

volumes:
  postgres_data:

# Добавьте сетевую изоляцию
networks:
  internal_network:
    internal: true  # Важно! Сеть недоступна извне